import React, {Component} from 'react';
import PropTypes from 'prop-types';
import {connect} from "react-redux";
import {changeScreen, setLoader} from "../AC";
import classNames from 'classnames';
import {getScreen, getUserStatus} from "../selectors";

class Navbar extends Component {

    static propTypes = {
        //from connect
        activeScreen: PropTypes.string.isRequired,
        userStatus: PropTypes.string,
        changeScreen: PropTypes.func.isRequired,
        setLoader: PropTypes.func.isRequired
    };

    render() {
        const {activeScreen} = this.props;

        return (
            <div className="tm-navbar">
                <div>
                    <a className={classNames({'uk-active': (activeScreen === 'balance')})} href="balance"
                       onClick={this.handleClick('balance')}>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M18.9843 12.0472C17.4335 12.0472 16.1718 13.3089 16.1718 14.8597C16.1718 16.4105 17.4335 17.6722 18.9843 17.6722H22.9687C22.9846 17.6722 23.0001 17.6706 23.0158 17.6698C23.0314 17.6706 23.0467 17.6722 23.0625 17.6722C23.5802 17.6722 24 17.2525 24 16.7347V9.37532C24 8.12723 23.3865 7.02028 22.4458 6.3383L19.2564 1.10612C19.1264 0.892744 18.9166 0.740119 18.6735 0.682182C18.4304 0.624151 18.1742 0.665635 17.9619 0.797353L15.6098 2.25591L14.5491 0.460885C14.4216 0.245073 14.213 0.0893545 13.9698 0.0284171C13.7268 -0.0325203 13.4693 0.00652654 13.2551 0.136651L4.22385 5.62533H2.81249C2.30339 5.62533 1.88775 5.21742 1.87528 4.71127C1.88775 4.20511 2.30339 3.79721 2.81249 3.79721H4.54687C5.06465 3.79721 5.48436 3.37749 5.48436 2.85971C5.48436 2.34193 5.06465 1.92221 4.54687 1.92221H2.81249C1.48603 1.92221 0.371202 2.84537 0.0764061 4.08291C0.0273749 4.19663 0 4.32178 0 4.45346V4.68783V4.73471V20.2503C0 22.3181 1.68225 24.0003 3.74999 24.0003H20.25C21.8667 24.0003 23.2965 22.9704 23.8078 21.4376C23.9717 20.9464 23.7063 20.4154 23.2152 20.2516C22.7241 20.0878 22.193 20.3531 22.0292 20.8443C21.7736 21.6105 21.0586 22.1253 20.25 22.1253H3.74999C2.71612 22.1253 1.875 21.2842 1.875 20.2503V7.3395C2.16839 7.44356 2.4839 7.50033 2.81249 7.50033H20.25C21.2838 7.50033 22.125 8.34145 22.125 9.37532V12.0472H18.9843ZM22.125 15.7972H18.9843C18.4674 15.7972 18.0468 15.3767 18.0468 14.8597C18.0468 14.3428 18.4674 13.9222 18.9843 13.9222H22.125V15.7972ZM7.83411 5.62538L13.4178 2.23196L14.4161 3.92138C14.4353 3.96755 14.4573 4.01307 14.4845 4.05694C14.5049 4.0898 14.5275 4.12041 14.5511 4.14985L15.4229 5.62538H7.83411ZM17.6008 5.62533L16.5639 3.87052L18.1472 2.88872L19.8153 5.62533H17.6008Z"
                                fill="white"/>
                        </svg>
                        <div>Баланс</div>
                    </a>
                </div>
                <div>
                    <a className={classNames({'uk-active': (activeScreen === 'offers')})} href="offers"
                       onClick={this.handleClick('offers')}>
                        <svg width="21" height="24" viewBox="0 0 21 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M19.952 9.4647L11.9991 1.51186C11.177 0.689674 9.83911 0.689627 9.01687 1.51186C8.27775 2.25094 8.21409 3.37814 8.7599 4.18303L8.74884 4.23839C8.17547 7.10549 6.77958 9.7138 4.71197 11.7814L1.06421 15.4291C0.240059 16.2533 0.239918 17.5872 1.06421 18.4114L3.05237 20.3995C3.87647 21.2237 5.21044 21.2237 6.03464 20.3995L6.5317 19.9025L10.011 23.3818C10.8352 24.206 12.1691 24.2061 12.9933 23.3818C13.8155 22.5596 13.8155 21.2218 12.9933 20.3996L11.5021 18.9085L11.9992 18.4114C12.8234 17.5873 12.8234 16.2534 11.9992 15.4292L11.6614 15.0913C13.3231 13.9279 15.2102 13.118 17.2255 12.7149L17.2816 12.7037C18.1044 13.2592 19.229 13.1699 19.952 12.4469H19.952C20.7741 11.6247 20.7741 10.2869 19.952 9.4647ZM5.04057 19.4055C4.76588 19.6801 4.32113 19.6802 4.04644 19.4054L2.05829 17.4173C1.78356 17.1425 1.78356 16.6979 2.05829 16.4232L5.53758 12.9439L8.51986 15.9261C8.17945 16.2665 5.38936 19.0566 5.04057 19.4055ZM11.9991 21.3936C12.2732 21.6677 12.2732 22.1136 11.9991 22.3877C11.7251 22.6617 11.2791 22.6617 11.0051 22.3877L7.52573 18.9084L8.51986 17.9143L11.9991 21.3936ZM9.51394 16.9202C9.72525 16.7089 10.0416 16.3852 10.5408 15.9588L11.0051 16.4232C11.2798 16.6979 11.2798 17.1425 11.0051 17.4173L10.508 17.9143L9.51394 16.9202ZM9.54379 14.962L6.50171 11.9199C8.13197 10.0374 9.29943 7.81532 9.92404 5.40126L16.0624 11.5396C13.6483 12.1642 11.4263 13.3316 9.54379 14.962ZM18.9578 11.4528C18.683 11.7274 18.2384 11.7274 17.9637 11.4528L10.0109 3.50001C9.73622 3.22523 9.73622 2.78067 10.0109 2.50594C10.2857 2.2312 10.7303 2.2312 11.0051 2.50594L18.9578 10.4586C19.2318 10.7327 19.2318 11.1786 18.9578 11.4528Z"
                                fill="white"/>
                        </svg>
                        <div>Акции</div>
                    </a>
                </div>
                <div>
                    <a className={classNames({'uk-active': (activeScreen === 'info')})} href="info"
                       onClick={this.handleClick('info')}>
                        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M0.937734 24C0.698812 24 0.463547 23.9087 0.285 23.7356C0.0110156 23.47 -0.074625 23.0648 0.0683906 22.7111L2.19703 17.4455C0.757594 15.5744 0 13.3793 0 11.0625C0 8.0918 1.25883 5.30358 3.54469 3.21145C5.80739 1.14052 8.81025 0 12 0C15.1897 0 18.1926 1.14052 20.4553 3.21145C22.7412 5.30358 24 8.0918 24 11.0625C24 13.1929 23.3419 15.2614 22.0968 17.0445C21.8003 17.469 21.2159 17.5728 20.7914 17.2763C20.3668 16.9799 20.263 16.3955 20.5595 15.9709C21.5837 14.5043 22.125 12.807 22.125 11.0625C22.125 5.99648 17.583 1.875 12 1.875C6.41705 1.875 1.875 5.99648 1.875 11.0625C1.875 13.1148 2.60517 15.0563 3.98653 16.6769C4.21312 16.9427 4.27317 17.3125 4.1422 17.6364L2.67192 21.2734L6.95372 19.3859C7.19105 19.2813 7.46119 19.2796 7.69978 19.3815C9.05072 19.9578 10.4975 20.25 12 20.25C13.7293 20.25 15.4359 19.8475 16.9353 19.086C17.397 18.8516 17.9612 19.0357 18.1957 19.4973C18.4301 19.959 18.246 20.5233 17.7844 20.7577C16.0232 21.6522 14.023 22.125 12 22.125C10.3837 22.125 8.82023 21.8348 7.34644 21.2619L1.31569 23.9204C1.19409 23.9739 1.06537 24 0.937734 24ZM12.9375 15.2344V10.1719C12.9375 9.65409 12.5178 9.23438 12 9.23438C11.4822 9.23438 11.0625 9.65409 11.0625 10.1719V15.2344C11.0625 15.7522 11.4822 16.1719 12 16.1719C12.5178 16.1719 12.9375 15.7522 12.9375 15.2344ZM12 6C11.4822 6 11.0625 6.41972 11.0625 6.9375C11.0625 7.45528 11.4822 7.875 12 7.875C12.5178 7.875 12.9375 7.45528 12.9375 6.9375C12.9375 6.41972 12.5178 6 12 6Z"
                                fill="white"/>
                        </svg>
                        <div>Инфо</div>
                    </a>
                </div>
                <div>
                    <a className={classNames({'uk-active': (activeScreen === 'map')})} href="map"
                       onClick={this.handleClick('map')}>
                        <svg width="24" height="20" viewBox="0 0 24 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M18.9236 12.1607H15.9369C17.2667 10.1301 17.9642 8.04938 17.9642 6.08367C17.9642 2.79496 15.2887 0.119385 12 0.119385C8.71125 0.119385 6.03567 2.79496 6.03567 6.08367C6.03567 8.04938 6.73322 10.1301 8.06297 12.1607H5.07633L0 19.8806H24L18.9236 12.1607ZM7.46259 6.08372C7.46255 3.58167 9.49805 1.54621 12 1.54621C14.502 1.54621 16.5375 3.58172 16.5375 6.08367C16.5375 8.58413 15.2016 10.8508 14.0809 12.3121C14.0449 12.3589 14.009 12.4047 13.9731 12.4506C13.9365 12.4973 13.8998 12.5434 13.8632 12.5891C13.8515 12.6037 13.8398 12.6183 13.8282 12.6328C13.7917 12.6779 13.7554 12.7225 13.7191 12.7666C13.7074 12.7807 13.6958 12.7949 13.6842 12.8089C13.6479 12.8527 13.6117 12.8959 13.5757 12.9386C13.5643 12.952 13.5529 12.9654 13.5416 12.9788C13.5053 13.0215 13.4692 13.0636 13.4332 13.1052C13.4224 13.1176 13.4117 13.1299 13.401 13.1422C13.3647 13.1839 13.3286 13.225 13.2927 13.2655C13.2825 13.2769 13.2725 13.2882 13.2624 13.2996C13.226 13.3404 13.1898 13.3807 13.1539 13.4202C13.145 13.43 13.1362 13.4397 13.1273 13.4494C13.0906 13.4896 13.054 13.5294 13.0179 13.5683C13.0103 13.5765 13.0027 13.5846 12.9952 13.5927C12.9581 13.6326 12.9212 13.6718 12.8849 13.7101C12.8791 13.7162 12.8735 13.7221 12.8678 13.7281C12.8299 13.7679 12.7925 13.807 12.7556 13.8451C12.7521 13.8488 12.7487 13.8522 12.7452 13.8558C12.7064 13.8958 12.6681 13.9351 12.6306 13.9731C12.6297 13.974 12.6289 13.9748 12.6281 13.9756C12.3874 14.2194 12.1729 14.4228 12.0002 14.5807C10.778 13.4623 7.46259 10.061 7.46259 6.08372ZM5.84587 13.5876H9.1088C10.1577 14.8782 11.1418 15.7395 11.4539 16.0011C11.454 16.0012 11.4541 16.0013 11.4542 16.0014C11.4655 16.0108 11.476 16.0196 11.4855 16.0275C11.4862 16.028 11.4867 16.0284 11.4874 16.029C11.5059 16.0443 11.5212 16.0569 11.5324 16.0659C11.5333 16.0667 11.5338 16.0671 11.5347 16.0679C11.5437 16.0751 11.5501 16.0803 11.5535 16.083C11.5538 16.0833 11.5546 16.0839 11.5549 16.0841L11.555 16.0842H11.555L11.5555 16.0846L12.0001 16.4396L12.4448 16.0846L12.4453 16.0842H12.4453L12.4454 16.0841C12.4457 16.0839 12.4464 16.0833 12.4468 16.083C12.4501 16.0803 12.4566 16.0752 12.4656 16.0679C12.4664 16.0672 12.4669 16.0667 12.4679 16.0659C12.4791 16.0569 12.4943 16.0443 12.5129 16.029C12.5136 16.0284 12.5141 16.028 12.5148 16.0275C12.5243 16.0196 12.5347 16.0108 12.5461 16.0014C12.5462 16.0013 12.5463 16.0012 12.5464 16.0011C12.8586 15.7394 13.8426 14.8782 14.8915 13.5876H18.1544L21.3543 18.4537H2.646L5.84587 13.5876Z"
                                fill="white"/>
                        </svg>
                        <div>Карта</div>
                    </a>
                </div>
            </div>
        );
    }

    handleClick = newScreen => e=> {
        e.preventDefault();

        const {userStatus, changeScreen, setLoader} = this.props;
        if(newScreen === 'balance' && !userStatus) changeScreen('auth');
        else changeScreen(newScreen);

        setLoader(true);
        setTimeout(() => {
            setLoader(false);
        }, 3000)
    }
}

const mapStateToProps = state => {
    return {
        activeScreen: getScreen(state),
        userStatus: getUserStatus(state),
    };
};

const mapDispatchToProps = dispatch => ({
    changeScreen: screenName => dispatch(changeScreen(screenName)),
    setLoader: (shown) => dispatch(setLoader(shown))
});

export default connect(mapStateToProps, mapDispatchToProps)(Navbar)
